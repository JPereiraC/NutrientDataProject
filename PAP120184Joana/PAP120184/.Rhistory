# several 'edge' statements
edge [arrowhead = diamond]
InformaçãoNutricional->FD_GROUP
InformaçãoNutricional->ABBREV
InformaçãoNutricional->FOOD_DES
FD_GROUP->NDB__No
FD_GROUP->FdGrp__Cd
ABBREV->Nutriente
ABBREV->NDB_No
ABBREV->Descrição
ABBREV->GmWt
FOOD_DES->FdGrp_Cd
FOOD_DES->NDB_No
}
")
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# several 'node' statements
node [shape = box,
fontname = Helvetica]
InformaçãoNutricional; FD_GROUP; ABBREV; FOOD_DES
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
NDB_No;Descrição;FdGrp_Cd;GmWt;Nutriente;NDB__No; FdGrp__Cd
# several 'edge' statements
edge [arrowhead = diamond]
InformaçãoNutricional->FD_GROUP
InformaçãoNutricional->ABBREV
InformaçãoNutricional->FOOD_DES
FD_GROUP->NDB__No
FD_GROUP->FdGrp__Cd
ABBREV->Nutriente
ABBREV->NDB_No
ABBREV->Descrição
ABBREV->GmWt
FOOD_DES->FdGrp_Cd
FOOD_DES->NDB_No
}
")
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# several 'node' statements
node [shape = box,
fontname = Helvetica]
InformaçãoNutricional; FD_GROUP; ABBREV; FOOD_DES
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
NDB_No;Descrição;FdGrp_Cd;GmWt;Nutriente;NDB__No; FdGrp__Cd
# several 'edge' statements
edge [arrowhead = diamond]
InformaçãoNutricional->FD_GROUP
InformaçãoNutricional->ABBREV
InformaçãoNutricional->FOOD_DES
FD_GROUP->NDB__No
FD_GROUP->FdGrp__Cd
ABBREV->Nutriente
ABBREV->NDB_No
ABBREV->Descrição
ABBREV->GmWt
FOOD_DES->FdGrp_Cd
FOOD_DES->NDB_No
}
")
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [fontsize = 8]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
InformaçãoNutricional; FD_GROUP; ABBREV; FOOD_DES
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
NDB_No;Descrição;FdGrp_Cd;GmWt;Nutriente;NDB__No; FdGrp__Cd
# several 'edge' statements
edge [arrowhead = diamond]
InformaçãoNutricional->FD_GROUP
InformaçãoNutricional->ABBREV
InformaçãoNutricional->FOOD_DES
FD_GROUP->NDB__No
FD_GROUP->FdGrp__Cd
ABBREV->Nutriente
ABBREV->NDB_No
ABBREV->Descrição
ABBREV->GmWt
FOOD_DES->FdGrp_Cd
FOOD_DES->NDB_No
}
")
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
InformaçãoNutricional; FD_GROUP; ABBREV; FOOD_DES
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
NDB_No;Descrição;FdGrp_Cd;GmWt;Nutriente;NDB__No; FdGrp__Cd
# several 'edge' statements
edge [arrowhead = vee]
InformaçãoNutricional->FD_GROUP
InformaçãoNutricional->ABBREV
InformaçãoNutricional->FOOD_DES
FD_GROUP->NDB__No
FD_GROUP->FdGrp__Cd
ABBREV->Nutriente
ABBREV->NDB_No
ABBREV->Descrição
ABBREV->GmWt
FOOD_DES->FdGrp_Cd
FOOD_DES->NDB_No
}
")
library(DiagrammeR)
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
InformaçãoNutricional; FD_GROUP; ABBREV; FOOD_DES
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
NDB_No;Descrição;FdGrp_Cd;GmWt;Nutriente;NDB__No; FdGrp__Cd
# several 'edge' statements
edge [arrowhead = vee]
InformaçãoNutricional->FD_GROUP
InformaçãoNutricional->ABBREV
InformaçãoNutricional->FOOD_DES
FD_GROUP->NDB__No
FD_GROUP->FdGrp__Cd
ABBREV->Nutriente
ABBREV->NDB_No
ABBREV->Descrição
ABBREV->GmWt
FOOD_DES->FdGrp_Cd
FOOD_DES->NDB_No
}
")
edge [color = grey]
<html>
<head>
<title>Title</title>
</head>
<body>
<p>This is an R HTML document. When you click the <b>Knit HTML</b> button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</p>
<!--begin.rcode
library(DiagrammeR)
grViz("
digraph neato {
graph [layout = neato]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a [label = ' Informacao Nutricional ']
node [fillcolor = yellow]
b [label = ' ABBREV ']
c [label = ' FD_GROUP ']
d [label = ' FOOD_DES ']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nutriente']
f [label = 'NDB_No']
g [label = 'Descrição']
h [label = 'GmWt - Porção standard']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
end.rcode-->
</body>
</html>
cat('<iframe src="./assets/widgets/Diagram1.Rhtml" width=100% height=100% allowtransparency="true"> </iframe>')
cat('<iframe src="./assets/widgets/Diagram1.Rhtml" width=100% height=100% allowtransparency="true"> </iframe>')
<html>
<head>
<title>Title</title>
</head>
<body>
<p>This is an R HTML document. When you click the <b>Knit HTML</b> button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</p>
<!--begin.rcode
library(DiagrammeR)
grViz("
digraph neato {
graph [layout = neato]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a [label = ' Informacao Nutricional ']
node [fillcolor = yellow]
b [label = ' ABBREV ']
c [label = ' FD_GROUP ']
d [label = ' FOOD_DES ']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nutriente']
f [label = 'NDB_No']
g [label = 'Descrição']
h [label = 'GmWt - Porção standard']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
end.rcode-->
</body>
</html>
webshot::install_phantomjs()
library(htmlwidgets)
library(DiagrammeR)
grViz("
diagraph neato {
graph [layout = neato]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a [label = ' Informacao Nutricional ']
node [fillcolor = yellow]
b [label = ' ABBREV ']
c [label = ' FD_GROUP ']
d [label = ' FOOD_DES ']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nutriente']
f [label = 'NDB_No']
g [label = 'Descrição']
h [label = 'GmWt - Porção standard']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
devtools::install_github('rich-iannone/DiagrammeR')
devtools::install_github('rich-iannone/DiagrammeR')
library("devtools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
devtools::install_github('rich-iannone/DiagrammeR')
install.packages("XML")
devtools::install_github('rich-iannone/DiagrammeR')
install.packages("xml2")
devtools::install_github('rich-iannone/DiagrammeR')
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot,
width = 2]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a [label = ' Informacao Nutricional ']
node [fillcolor = yellow]
b [label = ' ABBREV ']
c [label = ' FD_GROUP ']
d [label = ' FOOD_DES ']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nutriente']
f [label = 'NDB_No']
g [label = 'Descrição']
h [label = 'GmWt - Porção standard']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a [label = ' Informacao Nutricional ']
node [fillcolor = yellow]
b [label = ' ABBREV ']
c [label = ' FD_GROUP ']
d [label = ' FOOD_DES ']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nutriente']
f [label = 'NDB_No']
g [label = 'Descrição']
h [label = 'GmWt']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
width = 1.0,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a [label = ' Informacao Nutricional ']
node [fillcolor = yellow]
b [label = ' ABBREV ']
c [label = ' FD_GROUP ']
d [label = ' FOOD_DES ']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nutriente']
f [label = 'NDB_No']
g [label = 'Descrição']
h [label = 'GmWt']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
library(htmlwidgets)
library(DiagrammeR)
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a [label = ' Informacao Nutricional ']
node [fillcolor = yellow]
b [label = ' ABBREV ']
c [label = ' FD_GROUP ']
d [label = ' FOOD_DES ']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nutriente']
f [label = 'NDB_No']
g [label = 'Descrição']
h [label = 'GmWt]}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = red]
a [label = ' Informacao Nutricional ']
node [fillcolor = yellow]
b [label = ' ABBREV ']
c [label = ' FD_GROUP ']
d [label = ' FOOD_DES ']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nutriente']
f [label = 'NDB_No']
g [label = 'Descrição']
h [label = 'GmWt]}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = CadetBlue,
label = '']
node [fillcolor = red]
a [label = 'BD Principal']
node [fillcolor = yellow]
b [label = 'ABBREV']
c [label = 'FD_GROUP']
d [label = 'FOOD_DES']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nut']
f [label = 'NDB_No']
g [label = 'Desc']
h [label = 'GmWt']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = CadetBlue,
label = '']
node [fillcolor = red]
a [label = 'BD Principal']
node [fillcolor = yellow]
b [label = 'ABBREV']
c [label = 'FD_GROUP']
d [label = 'FOOD_DES']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nut']
f [label = 'NDB_No']
g [label = 'Desc']
h [label = 'GmWt']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = CadetBlue]
a [label = 'BD Principal']
node [fillcolor = yellow]
b [label = 'ABBREV']
c [label = 'FD_GROUP']
d [label = 'FOOD_DES']
node [fillcolor = orange]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nut']
f [label = 'NDB_No']
g [label = 'Desc']
h [label = 'GmWt']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
library(htmlwidgets)
library(DiagrammeR)
grViz("
digraph dot {
graph [layout = dot]
node [shape = circle,
style = filled,
color = grey,
label = '']
node [fillcolor = LightBlue]
a [label = 'BD Principal']
node [fillcolor = PowderBlue]
b [label = 'ABBREV']
c [label = 'FD_GROUP']
d [label = 'FOOD_DES']
node [fillcolor = AliceBlue]
edge [color = grey]
a -> {b c d}
b -> {e [label = 'Nut']
f [label = 'NDB_No']
g [label = 'Desc']
h [label = 'GmWt']}
c -> {i [label = 'FdGrp_Cd']
j [label = 'FdGrp_Desc']}
d -> {k [label = 'NDB_No']
l [label = 'FdGrp_Cd']}
}")
## NutritionViewer App
